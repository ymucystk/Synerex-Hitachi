// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: dispatch.proto

package proto

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PackagesPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId              uint64 `protobuf:"varint,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	EstimatedTimeOfArrival string `protobuf:"bytes,2,opt,name=estimated_time_of_arrival,json=estimatedTimeOfArrival,proto3" json:"estimated_time_of_arrival,omitempty"`
}

func (x *PackagesPlan) Reset() {
	*x = PackagesPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackagesPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackagesPlan) ProtoMessage() {}

func (x *PackagesPlan) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackagesPlan.ProtoReflect.Descriptor instead.
func (*PackagesPlan) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{0}
}

func (x *PackagesPlan) GetPackageId() uint64 {
	if x != nil {
		return x.PackageId
	}
	return 0
}

func (x *PackagesPlan) GetEstimatedTimeOfArrival() string {
	if x != nil {
		return x.EstimatedTimeOfArrival
	}
	return ""
}

type DeliveryPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryPlanId uint64          `protobuf:"varint,1,opt,name=delivery_plan_id,json=deliveryPlanId,proto3" json:"delivery_plan_id,omitempty"`
	PackagesPlan   []*PackagesPlan `protobuf:"bytes,2,rep,name=packages_plan,json=packagesPlan,proto3" json:"packages_plan,omitempty"`
}

func (x *DeliveryPlan) Reset() {
	*x = DeliveryPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryPlan) ProtoMessage() {}

func (x *DeliveryPlan) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryPlan.ProtoReflect.Descriptor instead.
func (*DeliveryPlan) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{1}
}

func (x *DeliveryPlan) GetDeliveryPlanId() uint64 {
	if x != nil {
		return x.DeliveryPlanId
	}
	return 0
}

func (x *DeliveryPlan) GetPackagesPlan() []*PackagesPlan {
	if x != nil {
		return x.PackagesPlan
	}
	return nil
}

type ChargingPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChargingPlanId    uint64 `protobuf:"varint,1,opt,name=charging_plan_id,json=chargingPlanId,proto3" json:"charging_plan_id,omitempty"`
	VehicleId         uint64 `protobuf:"varint,2,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	ChargingStationId uint64 `protobuf:"varint,3,opt,name=charging_station_id,json=chargingStationId,proto3" json:"charging_station_id,omitempty"`
	ChargerId         uint64 `protobuf:"varint,4,opt,name=charger_id,json=chargerId,proto3" json:"charger_id,omitempty"`
	ChargingType      uint32 `protobuf:"varint,5,opt,name=charging_type,json=chargingType,proto3" json:"charging_type,omitempty"`
	StartTime         string `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime           string `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ChargingPlan) Reset() {
	*x = ChargingPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargingPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargingPlan) ProtoMessage() {}

func (x *ChargingPlan) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargingPlan.ProtoReflect.Descriptor instead.
func (*ChargingPlan) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{2}
}

func (x *ChargingPlan) GetChargingPlanId() uint64 {
	if x != nil {
		return x.ChargingPlanId
	}
	return 0
}

func (x *ChargingPlan) GetVehicleId() uint64 {
	if x != nil {
		return x.VehicleId
	}
	return 0
}

func (x *ChargingPlan) GetChargingStationId() uint64 {
	if x != nil {
		return x.ChargingStationId
	}
	return 0
}

func (x *ChargingPlan) GetChargerId() uint64 {
	if x != nil {
		return x.ChargerId
	}
	return 0
}

func (x *ChargingPlan) GetChargingType() uint32 {
	if x != nil {
		return x.ChargingType
	}
	return 0
}

func (x *ChargingPlan) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ChargingPlan) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type ChargingPlans struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChargingPlanId uint64 `protobuf:"varint,1,opt,name=charging_plan_id,json=chargingPlanId,proto3" json:"charging_plan_id,omitempty"`
}

func (x *ChargingPlans) Reset() {
	*x = ChargingPlans{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargingPlans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargingPlans) ProtoMessage() {}

func (x *ChargingPlans) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargingPlans.ProtoReflect.Descriptor instead.
func (*ChargingPlans) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{3}
}

func (x *ChargingPlans) GetChargingPlanId() uint64 {
	if x != nil {
		return x.ChargingPlanId
	}
	return 0
}

type RouteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *RouteInfo) Reset() {
	*x = RouteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteInfo) ProtoMessage() {}

func (x *RouteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteInfo.ProtoReflect.Descriptor instead.
func (*RouteInfo) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{4}
}

func (x *RouteInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *RouteInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type VehicleAssignate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleId      uint64           `protobuf:"varint,1,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	DeliveryPlanId uint64           `protobuf:"varint,2,opt,name=delivery_plan_id,json=deliveryPlanId,proto3" json:"delivery_plan_id,omitempty"`
	ChargingPlans  []*ChargingPlans `protobuf:"bytes,3,rep,name=charging_plans,json=chargingPlans,proto3" json:"charging_plans,omitempty"`
	RouteInfo      []*RouteInfo     `protobuf:"bytes,4,rep,name=route_info,json=routeInfo,proto3" json:"route_info,omitempty"`
}

func (x *VehicleAssignate) Reset() {
	*x = VehicleAssignate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleAssignate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAssignate) ProtoMessage() {}

func (x *VehicleAssignate) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleAssignate.ProtoReflect.Descriptor instead.
func (*VehicleAssignate) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{5}
}

func (x *VehicleAssignate) GetVehicleId() uint64 {
	if x != nil {
		return x.VehicleId
	}
	return 0
}

func (x *VehicleAssignate) GetDeliveryPlanId() uint64 {
	if x != nil {
		return x.DeliveryPlanId
	}
	return 0
}

func (x *VehicleAssignate) GetChargingPlans() []*ChargingPlans {
	if x != nil {
		return x.ChargingPlans
	}
	return nil
}

func (x *VehicleAssignate) GetRouteInfo() []*RouteInfo {
	if x != nil {
		return x.RouteInfo
	}
	return nil
}

type DeliveryPlanningProvide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId          uint32              `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TimeStamp        string              `protobuf:"bytes,2,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	ModuleId         uint64              `protobuf:"varint,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	ProvideId        string              `protobuf:"bytes,4,opt,name=provide_id,json=provideId,proto3" json:"provide_id,omitempty"`
	DeliveryPlan     []*DeliveryPlan     `protobuf:"bytes,5,rep,name=delivery_plan,json=deliveryPlan,proto3" json:"delivery_plan,omitempty"`
	ChargingPlan     []*ChargingPlan     `protobuf:"bytes,6,rep,name=charging_plan,json=chargingPlan,proto3" json:"charging_plan,omitempty"`
	VehicleAssignate []*VehicleAssignate `protobuf:"bytes,7,rep,name=Vehicle_assignate,json=VehicleAssignate,proto3" json:"Vehicle_assignate,omitempty"`
}

func (x *DeliveryPlanningProvide) Reset() {
	*x = DeliveryPlanningProvide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryPlanningProvide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryPlanningProvide) ProtoMessage() {}

func (x *DeliveryPlanningProvide) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryPlanningProvide.ProtoReflect.Descriptor instead.
func (*DeliveryPlanningProvide) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{6}
}

func (x *DeliveryPlanningProvide) GetEventId() uint32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *DeliveryPlanningProvide) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *DeliveryPlanningProvide) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *DeliveryPlanningProvide) GetProvideId() string {
	if x != nil {
		return x.ProvideId
	}
	return ""
}

func (x *DeliveryPlanningProvide) GetDeliveryPlan() []*DeliveryPlan {
	if x != nil {
		return x.DeliveryPlan
	}
	return nil
}

func (x *DeliveryPlanningProvide) GetChargingPlan() []*ChargingPlan {
	if x != nil {
		return x.ChargingPlan
	}
	return nil
}

func (x *DeliveryPlanningProvide) GetVehicleAssignate() []*VehicleAssignate {
	if x != nil {
		return x.VehicleAssignate
	}
	return nil
}

type VehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId          uint32 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TimeStamp        string `protobuf:"bytes,2,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	ModuleId         uint64 `protobuf:"varint,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	NumberOfVehicles uint64 `protobuf:"varint,4,opt,name=number_of_vehicles,json=numberOfVehicles,proto3" json:"number_of_vehicles,omitempty"`
}

func (x *VehicleRequest) Reset() {
	*x = VehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleRequest) ProtoMessage() {}

func (x *VehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleRequest.ProtoReflect.Descriptor instead.
func (*VehicleRequest) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{7}
}

func (x *VehicleRequest) GetEventId() uint32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *VehicleRequest) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *VehicleRequest) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *VehicleRequest) GetNumberOfVehicles() uint64 {
	if x != nil {
		return x.NumberOfVehicles
	}
	return 0
}

type VehiclePlanAdoption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId   uint32 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TimeStamp string `protobuf:"bytes,2,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	ModuleId  uint64 `protobuf:"varint,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	ProvideId string `protobuf:"bytes,4,opt,name=provide_id,json=provideId,proto3" json:"provide_id,omitempty"`
}

func (x *VehiclePlanAdoption) Reset() {
	*x = VehiclePlanAdoption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePlanAdoption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePlanAdoption) ProtoMessage() {}

func (x *VehiclePlanAdoption) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePlanAdoption.ProtoReflect.Descriptor instead.
func (*VehiclePlanAdoption) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{8}
}

func (x *VehiclePlanAdoption) GetEventId() uint32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *VehiclePlanAdoption) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *VehiclePlanAdoption) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *VehiclePlanAdoption) GetProvideId() string {
	if x != nil {
		return x.ProvideId
	}
	return ""
}

type DispatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DispatchResponse) Reset() {
	*x = DispatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DispatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchResponse) ProtoMessage() {}

func (x *DispatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchResponse.ProtoReflect.Descriptor instead.
func (*DispatchResponse) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{9}
}

func (x *DispatchResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type PointsNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude  float64 `protobuf:"fixed64,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
}

func (x *PointsNum) Reset() {
	*x = PointsNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointsNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointsNum) ProtoMessage() {}

func (x *PointsNum) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointsNum.ProtoReflect.Descriptor instead.
func (*PointsNum) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{10}
}

func (x *PointsNum) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *PointsNum) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *PointsNum) GetAltitude() float64 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

type ElectricityCostSimulation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramId     uint32       `protobuf:"varint,1,opt,name=program_id,json=programId,proto3" json:"program_id,omitempty"`
	EventId       uint32       `protobuf:"varint,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TimeStamp     string       `protobuf:"bytes,3,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	ModuleId      uint64       `protobuf:"varint,4,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	DepartureTime string       `protobuf:"bytes,5,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	PointsNum     []*PointsNum `protobuf:"bytes,6,rep,name=points_num,json=pointsNum,proto3" json:"points_num,omitempty"`
}

func (x *ElectricityCostSimulation) Reset() {
	*x = ElectricityCostSimulation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatch_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElectricityCostSimulation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElectricityCostSimulation) ProtoMessage() {}

func (x *ElectricityCostSimulation) ProtoReflect() protoreflect.Message {
	mi := &file_dispatch_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElectricityCostSimulation.ProtoReflect.Descriptor instead.
func (*ElectricityCostSimulation) Descriptor() ([]byte, []int) {
	return file_dispatch_proto_rawDescGZIP(), []int{11}
}

func (x *ElectricityCostSimulation) GetProgramId() uint32 {
	if x != nil {
		return x.ProgramId
	}
	return 0
}

func (x *ElectricityCostSimulation) GetEventId() uint32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *ElectricityCostSimulation) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *ElectricityCostSimulation) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *ElectricityCostSimulation) GetDepartureTime() string {
	if x != nil {
		return x.DepartureTime
	}
	return ""
}

func (x *ElectricityCostSimulation) GetPointsNum() []*PointsNum {
	if x != nil {
		return x.PointsNum
	}
	return nil
}

var File_dispatch_proto protoreflect.FileDescriptor

var file_dispatch_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x0c, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x65, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x61,
	0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x41, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x22, 0x77, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x3d,
	0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x6e, 0x22, 0x85, 0x02,
	0x0a, 0x0c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x28,
	0x0a, 0x10, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x67, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x22, 0x45, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x10, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x64, 0x69, 0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x69,
	0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd8, 0x02,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x3d, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x3d,
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x0c, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x49, 0x0a,
	0x11, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x10, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x0e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73,
	0x22, 0x8b, 0x01, 0x0a, 0x13, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x41, 0x64, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x2a,
	0x0a, 0x10, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x61, 0x0a, 0x09, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xee, 0x01,
	0x0a, 0x19, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x73,
	0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64,
	0x69, 0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x4e, 0x75, 0x6d, 0x52, 0x09, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x32, 0xe2,
	0x03, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x76, 0x0a, 0x13, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x12, 0x23, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x1a, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f,
	0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x3a, 0x01, 0x2a, 0x12, 0x70, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x12, 0x1f, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x64, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x3a, 0x01, 0x2a, 0x12, 0x83, 0x01,
	0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x25, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x73,
	0x74, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x2e, 0x64, 0x69,
	0x73, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x22, 0x22, 0x1d, 0x2f, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2f, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x69, 0x74, 0x79,
	0x3a, 0x01, 0x2a, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x2f, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dispatch_proto_rawDescOnce sync.Once
	file_dispatch_proto_rawDescData = file_dispatch_proto_rawDesc
)

func file_dispatch_proto_rawDescGZIP() []byte {
	file_dispatch_proto_rawDescOnce.Do(func() {
		file_dispatch_proto_rawDescData = protoimpl.X.CompressGZIP(file_dispatch_proto_rawDescData)
	})
	return file_dispatch_proto_rawDescData
}

var file_dispatch_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_dispatch_proto_goTypes = []interface{}{
	(*PackagesPlan)(nil),              // 0: disp_proto.PackagesPlan
	(*DeliveryPlan)(nil),              // 1: disp_proto.DeliveryPlan
	(*ChargingPlan)(nil),              // 2: disp_proto.ChargingPlan
	(*ChargingPlans)(nil),             // 3: disp_proto.ChargingPlans
	(*RouteInfo)(nil),                 // 4: disp_proto.RouteInfo
	(*VehicleAssignate)(nil),          // 5: disp_proto.VehicleAssignate
	(*DeliveryPlanningProvide)(nil),   // 6: disp_proto.DeliveryPlanningProvide
	(*VehicleRequest)(nil),            // 7: disp_proto.VehicleRequest
	(*VehiclePlanAdoption)(nil),       // 8: disp_proto.VehiclePlanAdoption
	(*DispatchResponse)(nil),          // 9: disp_proto.DispatchResponse
	(*PointsNum)(nil),                 // 10: disp_proto.PointsNum
	(*ElectricityCostSimulation)(nil), // 11: disp_proto.ElectricityCostSimulation
}
var file_dispatch_proto_depIdxs = []int32{
	0,  // 0: disp_proto.DeliveryPlan.packages_plan:type_name -> disp_proto.PackagesPlan
	3,  // 1: disp_proto.VehicleAssignate.charging_plans:type_name -> disp_proto.ChargingPlans
	4,  // 2: disp_proto.VehicleAssignate.route_info:type_name -> disp_proto.RouteInfo
	1,  // 3: disp_proto.DeliveryPlanningProvide.delivery_plan:type_name -> disp_proto.DeliveryPlan
	2,  // 4: disp_proto.DeliveryPlanningProvide.charging_plan:type_name -> disp_proto.ChargingPlan
	5,  // 5: disp_proto.DeliveryPlanningProvide.Vehicle_assignate:type_name -> disp_proto.VehicleAssignate
	10, // 6: disp_proto.ElectricityCostSimulation.points_num:type_name -> disp_proto.PointsNum
	6,  // 7: disp_proto.Dispatch.ProvideDeliveryPlan:input_type -> disp_proto.DeliveryPlanningProvide
	7,  // 8: disp_proto.Dispatch.RequestVehicle:input_type -> disp_proto.VehicleRequest
	8,  // 9: disp_proto.Dispatch.Confirm:input_type -> disp_proto.VehiclePlanAdoption
	11, // 10: disp_proto.Dispatch.RequestElectricity:input_type -> disp_proto.ElectricityCostSimulation
	9,  // 11: disp_proto.Dispatch.ProvideDeliveryPlan:output_type -> disp_proto.DispatchResponse
	9,  // 12: disp_proto.Dispatch.RequestVehicle:output_type -> disp_proto.DispatchResponse
	9,  // 13: disp_proto.Dispatch.Confirm:output_type -> disp_proto.DispatchResponse
	9,  // 14: disp_proto.Dispatch.RequestElectricity:output_type -> disp_proto.DispatchResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_dispatch_proto_init() }
func file_dispatch_proto_init() {
	if File_dispatch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dispatch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackagesPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargingPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargingPlans); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleAssignate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryPlanningProvide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePlanAdoption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DispatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointsNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatch_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElectricityCostSimulation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dispatch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dispatch_proto_goTypes,
		DependencyIndexes: file_dispatch_proto_depIdxs,
		MessageInfos:      file_dispatch_proto_msgTypes,
	}.Build()
	File_dispatch_proto = out.File
	file_dispatch_proto_rawDesc = nil
	file_dispatch_proto_goTypes = nil
	file_dispatch_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DispatchClient is the client API for Dispatch service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DispatchClient interface {
	ProvideDeliveryPlan(ctx context.Context, in *DeliveryPlanningProvide, opts ...grpc.CallOption) (*DispatchResponse, error)
	RequestVehicle(ctx context.Context, in *VehicleRequest, opts ...grpc.CallOption) (*DispatchResponse, error)
	Confirm(ctx context.Context, in *VehiclePlanAdoption, opts ...grpc.CallOption) (*DispatchResponse, error)
	RequestElectricity(ctx context.Context, in *ElectricityCostSimulation, opts ...grpc.CallOption) (*DispatchResponse, error)
}

type dispatchClient struct {
	cc grpc.ClientConnInterface
}

func NewDispatchClient(cc grpc.ClientConnInterface) DispatchClient {
	return &dispatchClient{cc}
}

func (c *dispatchClient) ProvideDeliveryPlan(ctx context.Context, in *DeliveryPlanningProvide, opts ...grpc.CallOption) (*DispatchResponse, error) {
	out := new(DispatchResponse)
	err := c.cc.Invoke(ctx, "/disp_proto.Dispatch/ProvideDeliveryPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dispatchClient) RequestVehicle(ctx context.Context, in *VehicleRequest, opts ...grpc.CallOption) (*DispatchResponse, error) {
	out := new(DispatchResponse)
	err := c.cc.Invoke(ctx, "/disp_proto.Dispatch/RequestVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dispatchClient) Confirm(ctx context.Context, in *VehiclePlanAdoption, opts ...grpc.CallOption) (*DispatchResponse, error) {
	out := new(DispatchResponse)
	err := c.cc.Invoke(ctx, "/disp_proto.Dispatch/Confirm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dispatchClient) RequestElectricity(ctx context.Context, in *ElectricityCostSimulation, opts ...grpc.CallOption) (*DispatchResponse, error) {
	out := new(DispatchResponse)
	err := c.cc.Invoke(ctx, "/disp_proto.Dispatch/RequestElectricity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DispatchServer is the server API for Dispatch service.
type DispatchServer interface {
	ProvideDeliveryPlan(context.Context, *DeliveryPlanningProvide) (*DispatchResponse, error)
	RequestVehicle(context.Context, *VehicleRequest) (*DispatchResponse, error)
	Confirm(context.Context, *VehiclePlanAdoption) (*DispatchResponse, error)
	RequestElectricity(context.Context, *ElectricityCostSimulation) (*DispatchResponse, error)
}

// UnimplementedDispatchServer can be embedded to have forward compatible implementations.
type UnimplementedDispatchServer struct {
}

func (*UnimplementedDispatchServer) ProvideDeliveryPlan(context.Context, *DeliveryPlanningProvide) (*DispatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProvideDeliveryPlan not implemented")
}
func (*UnimplementedDispatchServer) RequestVehicle(context.Context, *VehicleRequest) (*DispatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestVehicle not implemented")
}
func (*UnimplementedDispatchServer) Confirm(context.Context, *VehiclePlanAdoption) (*DispatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Confirm not implemented")
}
func (*UnimplementedDispatchServer) RequestElectricity(context.Context, *ElectricityCostSimulation) (*DispatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestElectricity not implemented")
}

func RegisterDispatchServer(s *grpc.Server, srv DispatchServer) {
	s.RegisterService(&_Dispatch_serviceDesc, srv)
}

func _Dispatch_ProvideDeliveryPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliveryPlanningProvide)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DispatchServer).ProvideDeliveryPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/disp_proto.Dispatch/ProvideDeliveryPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DispatchServer).ProvideDeliveryPlan(ctx, req.(*DeliveryPlanningProvide))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dispatch_RequestVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VehicleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DispatchServer).RequestVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/disp_proto.Dispatch/RequestVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DispatchServer).RequestVehicle(ctx, req.(*VehicleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dispatch_Confirm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VehiclePlanAdoption)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DispatchServer).Confirm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/disp_proto.Dispatch/Confirm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DispatchServer).Confirm(ctx, req.(*VehiclePlanAdoption))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dispatch_RequestElectricity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ElectricityCostSimulation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DispatchServer).RequestElectricity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/disp_proto.Dispatch/RequestElectricity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DispatchServer).RequestElectricity(ctx, req.(*ElectricityCostSimulation))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dispatch_serviceDesc = grpc.ServiceDesc{
	ServiceName: "disp_proto.Dispatch",
	HandlerType: (*DispatchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProvideDeliveryPlan",
			Handler:    _Dispatch_ProvideDeliveryPlan_Handler,
		},
		{
			MethodName: "RequestVehicle",
			Handler:    _Dispatch_RequestVehicle_Handler,
		},
		{
			MethodName: "Confirm",
			Handler:    _Dispatch_Confirm_Handler,
		},
		{
			MethodName: "RequestElectricity",
			Handler:    _Dispatch_RequestElectricity_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dispatch.proto",
}
